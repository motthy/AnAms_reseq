https://rapdb.dna.affrc.go.jp/genome-wide_variations/Analysis_workflow_for_detection_of_genome-wide_var.html




# create bwa index

cwltool  ../tools/bwa-index.cwl --reference IRGSP-1.0_genome.fasta 

入力: --reference : genomeのfasta
出力: index files, ログファイル (prefixは入力ファイルと同じ)up
-----

# Create Dictionary
ゲノムfastaから dict ファイルを作る

cwltool ../tools/picard-CreateSequenceDictionary.cwl --ref_fasta IRGSP-1.0_genome.fasta 

出力ファイル名は nameroot + .dict になる
e.g. genome.fasta --> genome.dict

-----

# bwa mem
$ cwltool  ../tools/bwa-mem.cwl --reference IRGSP-1.0_genome.fasta  --fastq1 SRR849476_1.fastq.gz --fastq2 SRR849476_2.fastq.gz --outprefix SRR849476

入力はref, fastq1/2, prefix
出力は {prefix}.sam
となる

---
sam を bamに変換

cwltool ../tools/samtools-sam2bam.cwl --sam SRR849476.sam

bamのそーと
cwltool ../tools/samtools-sort.cwl --bam SRR849476.bam --threads 2 --memory 2G


--

# Make clean BAMのstep

## picard でFASTQ から unaligned BAM を作る
cwl: tools/picard-FastqToSam.cwl

パラメータ
--fastq1  
--fastq2
--out_unmapped_bam : 出力ファイル名 uBAM.bam をdefaultで指定している
--sample_id : デフォルトで決めておいた方が良いか？

実行例
cwltool ../tools/picard-FastqToSam.cwl --fastq1 SRR849476_1.fastq.gz --fastq2 SRR849476_2.fastq.gz --sample_id SRR849476

メモ
out_unmapped_bam はパラメータ指定もできるが、uBAM.bam をdefaultで指定している。

-- 
# Make clean BAMのstep続き (aligned BAM と unmapped BAM を結合)

##
cwl: tools/picard-MergeBamAlignment.cwl

パラメータ
	--aligned
	-unmapped
	--out_merged_bam (出力ファイル, default=alignment.merge.bam)
	--ref_fasta リファレンスのFASTAファイル

実行例
cwltool ../tools/picard-MergeBamAlignment.cwl --aligned alignment.sort.bam --unmapped uBAM.bam --out_merged_bam alignment.merge.bam --ref_fasta genome.fasta

cwltool ../tools/picard-MergeBamAlignment.cwl --aligned SRR849476.sort.bam --unmapped uBAM.bam --out_merged_bam SRR849476.merge.bam --ref_fasta IRGSP-1.0_genome.fasta
メモ

TODO:  out.merged.bamを prefix で指定するようにする

---
# RemovePCRduplicates

cwltool ../tools/picard-MarkDuplicates.cwl --input SRR849476.merge.bam --out_rmdup_bam SRR849476.rmdup.bam --out_metrics_file SRR849476.metrics.txt


---
GATK haplotype caller
cwltool  ../tools/gatk-HaplotypeCaller.cwl --input SRR849476.rmdup.bam --output SRR849476.g.vcf.gz --reference IRGSP-1.0_genome.fasta

---
GATK GenotypeGVCFs
PDFにはなかったが、vcfのindexが必要だったのでgatkIndexFeature fileを実行 (secondary fileで対応したので不要)
実行方法
$ gatk IndexFeatureFile --feature-file /data/SRR849476.g.vcf.gz
出力ファイル　SRR849476.g.vcf.gz.tbi

cwltool ../tools/gatk-IndexFeatureFile.cwl --feature-file SRR849476.g.vcf.gz


cwltool ../tools/gatk-GenotypeGVCFs.cwl --reference IRGSP-1.0_genome.fasta --variant SRR849476.g.vcf.gz  --output SRR849476.genotype.vcf.gz

--
GATK filtration

先にtbiを作っておく（secondary fileで出すようにしたので不要)
cwltool ../tools/gatk-IndexFeatureFile.cwl --featurefile SRR849476.genotype.vcf.gz 

cwltool ../tools/gatk-VariantFiltration.cwl --variant SRR849476.genotype.vcf.gz --reference IRGSP-1.0_genome.fasta --output SRR849476.filter.genotype.vcf.gz

--
GATK SelectVariants
cwltool ../tools/gatk-SelectVariants.cwl --variant SRR849476.filter.genotype.vcf.gz --reference IRGSP-1.0_genome.fasta --output SRR849476.varonly.vcf.gz.vcf.gz


---
snpEff
docker pull quay.io/biocontainers/snpeff:4.3.1t--3


cwltool ../../rice_reseq/tools/snpeff-build.cwl --genome IRGSP-1.0_genome_M_C_unanchored.fa --gtf RAP-DB_MSU_concatenated_for_snpEff.gtf --protein RAP-DB_MSU_concatenated_protein.fa --dbname RICEDB --dbdir snpeff_db
# dbnameとdbdirはdefault指定してあるので不要
cwltool ../../rice_reseq/tools/snpeff-build.cwl --genome IRGSP-1.0_genome_M_C_unanchored.fa --gtf RAP-DB_MSU_concatenated_for_snpEff.gtf --protein RAP-DB_MSU_concatenated_protein.fa
#

アノテーション
cwltool ../../rice_reseq/tools/snpeff-annotate.cwl --vcf SRR849476.varonly.vcf.gz  --dbdir snpeff_db/ --out_vcf out_snpeff.vcf
dbnameはdefault指定


workflowでbuild&annotation
cwltool ../../rice_reseq/workflows/snpeff_all.cwl --genome IRGSP-1.0_genome_M_C_unanchored.fa --gtf RAP-DB_MSU_concatenated_for_snpEff.gtf --protein RAP-DB_MSU_concatenated_protein.fa --vcf SRR849476.varonly.vcf.gz --out_vcf out_snpeff.vcf
##
cwl:

実行例


=---------------------------------
1205

# prepare ref
cwltool --outdir test_1205 ../workflows/prepare_reference.cwl --reference rice_test_genome.fa
# mapping (fastq2bam)
cwltool --outdir test_1205/ ../workflows/fastq2bam.cwl --fastq1 test_small_1.fq --fastq2 test_small_2.fq --outprefix SAMDxxxxx --threads 2 --reference test_1205/rice_test_genome.fa
# bam2vcf
cwltool --cachedir cashe_b2f --outdir test_1205/ ../workflows/bam2vcf.cwl --bam test_1205/SAMDxxxxx.rmdup.bam --reference test_1205/rice_test_genome.fa --outprefix SAMDxxxxx
# snpeff
cwltool --cachedir cache_1205  --outdir result_1205 ../../rice_reseq/workflows/snpeff_all.cwl --genome IRGSP-1.0_genome_M_C_unanchored.fa --gtf RAP-DB_MSU_concatenated_for_snpEff.gtf --protein RAP-DB_MSU_concatenated_protein.fa --vcf SRR849476.varonly.vcf.gz --dbdir snpeff_db_1205 --outprefix SAMDxxxxxx


全て実行
cwltool --cachedir cache_all --outdir all_test ../workflows/rapdb-pipeline.cwl --fastq1 test_small_1.fq --fastq2 test_small_2.fq --outprefix SAMDxxxxx --threads 2 --reference rice_test_genome.fa

cwltool --cachedir cache_all --outdir all_test_snpeff ../workflows/rapdb-pipeline.cwl --fastq1 test_small_1.fq --fastq2 test_small_2.fq --outprefix SAMDxxxxx --threads 2 --reference IRGSP-1.0_genome_M_C_unanchored.fa --ref_gtf RAP-DB_MSU_concatenated_for_snpEff.gtf --ref_protein RAP-DB_MSU_concatenated_protein.fa

出力は
SAMDxxxxx.rmdup.bam
SAMDxxxxx.rmdup.bam.bai
SAMDxxxxx.rmdup.metrics
variants_SAMDxxxxx.varonly.vcf.gz
variants_SAMDxxxxx.varonly.vcf.gz.tbi

